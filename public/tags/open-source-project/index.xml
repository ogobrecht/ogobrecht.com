<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open Source Project on Ottmar’s Notes</title>
    <link>https://ogobrecht.com/tags/open-source-project/</link>
    <description>Recent content in Open Source Project on Ottmar’s Notes</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</managingEditor>
    <webMaster>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</webMaster>
    <lastBuildDate>Fri, 08 Oct 2021 13:00:00 +0000</lastBuildDate>
    <atom:link href="https://ogobrecht.com/tags/open-source-project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Yet another Oracle DB logging tool: Console</title>
      <link>https://ogobrecht.com/posts/2021-10-04-yet-another-oracle-db-logging-tool-console/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2021-10-04-yet-another-oracle-db-logging-tool-console/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;&#xA;&lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#a-single-install-script&#34;&gt;A single install script&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#production-safe-without-further-configuration&#34;&gt;Production safe without further configuration&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#method-names-based-on-javascript-console&#34;&gt;Method names based on JavaScript Console&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#reduced-amount-of-log-entries-through-saved-call-stack&#34;&gt;Reduced amount of log entries through saved call stack&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#simple-logging-of-method-parameters&#34;&gt;Simple logging of method parameters&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#markdown-format-for-automatically-determined-metadata&#34;&gt;Markdown format for automatically determined metadata&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#extensible-logs-through-overloaded-log-methods&#34;&gt;Extensible logs through overloaded log methods&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#measure-time-and-count-things&#34;&gt;Measure time and count things&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#assert-format-and-other-helpers&#34;&gt;Assert, format and other helpers&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#displaying-the-package-status-of-console-in-a-session&#34;&gt;Displaying the package status of Console in a session&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#apex-error-handling-function&#34;&gt;APEX Error Handling Function&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#apex-plug-in-for-capturing-frontend-errors&#34;&gt;APEX Plug-in for capturing frontend errors&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#sources-of-inspiration&#34;&gt;Sources of inspiration&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#project-homepage&#34;&gt;Project homepage&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;It looks like it is a hobby of PL/SQL developers to develop their own logging tool. There are already some free tools on the market and probably many that have never been released (&lt;a href=&#34;https://www.doag.org/formes/pubfiles/10101682/2018-SQLPLSQL-Sabine_Heimsath-PL_SQL__Monitoren__gt__Messen__gt__Optimieren_-_mit_Open_Source-Praesentation.pdf&#34;&gt;DOAG talk by Sabine Heimsath on the topic&lt;/a&gt;):&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sample Data Sets for Oracle</title>
      <link>https://ogobrecht.com/posts/2020-05-25-sample-data-sets-for-oracle/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2020-05-25-sample-data-sets-for-oracle/</guid>
      <description>&lt;p&gt;Sometimes you need only some small tables and some rows of data to play around with, to test things out. I think most of you immediately would say EMP, DEPT&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Sure, but a bit more data would be nice. Ok, OE and HR schema&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;Sure, but I have no SYS rights on the database in my current project to install the schemas, can I have it in my current dev schema?&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>PLOC - Convert PL/SQL Code into Markdown Docs</title>
      <link>https://ogobrecht.com/posts/2019-01-10-ploc-plsql-code-to-doc-converter/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2019-01-10-ploc-plsql-code-to-doc-converter/</guid>
      <description>&lt;p&gt;Some months ago I had to write a README file with Markdown syntax for a PL/SQL open source project. I changed function and procedure parameters of the package often during the implementation. Therefore, maintaining the documentation was no fun in the beginning. Maybe you know this from your own (payed) projects ;-)&lt;/p&gt;&#xA;&lt;p&gt;Normally in the business world I see minimalistic comments in the code and a dedicated documentation independent of the code. As you can imagine, the latter is sometimes - let&amp;rsquo;s say &amp;ldquo;out of date&amp;rdquo;, if it exists at all &amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>PLEX - PL/SQL Export Utilities</title>
      <link>https://ogobrecht.com/posts/2018-08-26-plex-plsql-export-utilities/</link>
      <pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2018-08-26-plex-plsql-export-utilities/</guid>
      <description>&lt;p&gt;PLEX is a standalone PL/SQL package with export utilities. It was created to be able to quickstart version control for existing (APEX) apps. It currently has two main functions called &lt;strong&gt;BackApp&lt;/strong&gt; and &lt;strong&gt;Queries_to_CSV&lt;/strong&gt;. Queries_to_CSV is used by BackApp as a helper function, but its functionality is also useful as a standalone. This post is all about BackApp, which has the following features:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Export the app definition of an APEX app (splitted files and optional single SQL file)&lt;/li&gt;&#xA;&lt;li&gt;Export all ORDS modules from the current schema&lt;/li&gt;&#xA;&lt;li&gt;Export all object DDL from the current schema&lt;/li&gt;&#xA;&lt;li&gt;Export table data into CSV files&lt;/li&gt;&#xA;&lt;li&gt;Provide basic script templates for export/import of whole app for DEV, TEST and PROD&lt;/li&gt;&#xA;&lt;li&gt;Everything in a (hopefully) nice directory structure ready to use with version control&lt;/li&gt;&#xA;&lt;li&gt;Return value is a file collection of type plex.tab_export_files (it was apex_t_export_files before PLEX version 2) for further processing&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Each file in the collection is represented by a record with two columns&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;name&lt;/code&gt; of type VARCHAR2(255), which is in fact the file path&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;contents&lt;/code&gt; of type CLOB&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;You can optionally zip the file collection with the helper function &lt;code&gt;to_zip&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Also see the my previous post on &lt;a href=&#34;https://ogobrecht.github.io/posts/2018-07-25-apex-export-and-version-control&#34;&gt;how to handle the apex_t_export_files type returned by the APEX_EXPORT package with SQL*Plus&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/ogobrecht/plex/releases/latest&#34;&gt;Download the latest code&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Run the provided install script &lt;code&gt;plex_install.sql&lt;/code&gt; (provides compiler flags) in your desired schema - could also be a central tools schema, don&amp;rsquo;t forget &lt;code&gt;grant execute on plex to xxx&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Startup your favorite SQL Tool, connect to your app schema and fire up the following query:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backapp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p_app_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yourAppId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Save the resulting BLOB file under a name with the extension &lt;code&gt;.zip&lt;/code&gt; and extract it to a local directory of your choice. You will find this directory structure and files:&lt;/p&gt;</description>
    </item>
    <item>
      <title>HydeBar</title>
      <link>https://ogobrecht.com/posts/2017-11-29-hydebar/</link>
      <pubDate>Wed, 29 Nov 2017 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2017-11-29-hydebar/</guid>
      <description>&lt;p&gt;Earlier this year I wrote at the end of &lt;a href=&#34;https://ogobrecht.com/posts/2017-03-05-dokuwiki-plugin-revealjs&#34;&gt;this post&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;PS: In the meantime I switched complete to Markdown and &lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt;, a static site generator - but this is another story for another post &amp;hellip;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;As always - it took a bit longer then expected. In the meantime I was fiddling around with Jekyll and modifying the default theme Minima to my needs. Then I stumbled over the &lt;a href=&#34;https://github.com/nijikokun/minami&#34;&gt;JSDoc theme Minami&lt;/a&gt; and the &lt;a href=&#34;https://shopify.github.io/liquid/&#34;&gt;Liquid docs site&lt;/a&gt; - both with nice sidebars. I wanted to have such a nice sidebar for my dev blog and began to look deeper how it was implemented. To my surprise the sidebar from the JSDoc theme Minami was complete CSS driven - cool.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Oracle DB 11gXE Install File Swap Check Disabler</title>
      <link>https://ogobrecht.com/posts/2017-06-13-ora11xe-install-file-swap-check-disabler/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2017-06-13-ora11xe-install-file-swap-check-disabler/</guid>
      <description>&lt;p&gt;Many people have problems to install Oracle 11XE in a Docker environment because the install file checks the available swap space in the container. In a container environment this fails often - see &lt;a href=&#34;https://github.com/oracle/docker-images/issues/294#issuecomment-301465754&#34;&gt;here&lt;/a&gt; or &lt;a href=&#34;https://www.elastichosts.com/blog/oracle-database-installation-on-a-container-running-centos/&#34;&gt;here&lt;/a&gt;, because the swap space is optimized for the entire stack and not controlled from within the operating system of the container.&lt;/p&gt;&#xA;&lt;p&gt;We have to disable the swap space check in the installation file. I wrote another &lt;a href=&#34;https://ogobrecht.com/posts/2017-03-21-pitfalls-with-oracle-11g-xe-and-docker-on-mac-os&#34;&gt;blog post about this&lt;/a&gt;. The problem is here, that you need a Linux based system to do the necessary steps. Under Windows you have no chance and you have to do it by yourself because for license reasons everyone has to download his/her own copy of the install file from &lt;a href=&#34;http://www.oracle.com/technetwork/database/database-technologies/express-edition/downloads/index.html&#34;&gt;Oracle OTN&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>jQuery Plugin svg2img</title>
      <link>https://ogobrecht.com/posts/2017-04-03-jquery-plugin-svg2img/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2017-04-03-jquery-plugin-svg2img/</guid>
      <description>&lt;p&gt;SVG based charts and visualizations are often used these days. But what if you want to use your browser inline SVGs, generated with some sort of JavaScript and fancy styled with CSS, offline - maybe in a presentation, send by email or printed out large scaled?&lt;/p&gt;&#xA;&lt;p&gt;You can create a screenshot, of course. But does this look nice when it comes to scaling? You can try to copy the HTML code of the SVG and wrap it into a correct SVG container, but then you will loose in the most cases the stylings, as normally not all CSS definitions are directly attached to the SVG elements. You can also use a browser extension like &lt;a href=&#34;https://chrome.google.com/webstore/detail/export-svg-with-style/dkjdcaddoplepioppogpckelchefhddi&#34;&gt;this one for Google Chrome&lt;/a&gt;, but then you depend on the browser and the extension.&lt;/p&gt;</description>
    </item>
    <item>
      <title>APEX Plugin dhtmlxGantt</title>
      <link>https://ogobrecht.com/posts/2017-03-14-apex-plugin-dhtmlx-gantt/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2017-03-14-apex-plugin-dhtmlx-gantt/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Preview&#34; src=&#34;https://raw.githubusercontent.com/ogobrecht/apex-plugin-dhtmlx-gantt/master/preview.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Some weeks ago I was asked, if I can create a plugin for the &lt;a href=&#34;https://dhtmlx.com/docs/products/dhtmlxGantt/&#34;&gt;Gantt chart library from dhtmlx.com&lt;/a&gt;. I had a look at the library and I thought that it should be possible.&lt;/p&gt;&#xA;&lt;p&gt;Because all my plugin developments are free time projects it took a while. Now the first public version is available. It is based on the GPLv2 version of the library, which has a reduced set of functionality. If you need advanced features like milestones, auto scheduling or calculating the critical path you can buy a Pro version of the library. I have no relation to the company behind dhtmlx.com, so please do not complain. As I told before I was asked for this plugin (which will be used in a Pro version there&amp;hellip;) and I like the visualization from DHTMLX.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DokuWiki Plugin Reveal.js</title>
      <link>https://ogobrecht.com/posts/2017-03-05-dokuwiki-plugin-revealjs/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2017-03-05-dokuwiki-plugin-revealjs/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.dokuwiki.org&#34;&gt;DokuWiki&lt;/a&gt; is very good for creating documentation in a team. It is PHP based, needs less resources and is running without a database only on files on nearly every webserver. If your infrastructure is crashed for whatever reason and you have at least access to the files (on the webserver or in a backup) you can read your documentation with a simple text editor, because DokuWiki&amp;rsquo;s syntax is designed to be readable as possible without any rendering to HTML.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown Reporter</title>
      <link>https://ogobrecht.com/posts/2017-01-23-markdown-reporter/</link>
      <pubDate>Mon, 23 Jan 2017 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2017-01-23-markdown-reporter/</guid>
      <description>&lt;p&gt;On the APEX connect 2016 in Berlin I talked about my APEX Markdown plugin and fine art printing with the help of Pandoc and LaTeX. When I was preparing my slides and documenting a SQL query in a Markdown code block I asked myself:&lt;/p&gt;&#xA;&lt;p&gt;What, if the database is taking this Markdown code block and runs the query inside to convert it into data?&lt;/p&gt;&#xA;&lt;p&gt;And what, if I take this Markdown text with the data in the code blocks and post it to a small webservice which converts the data blocks into charts and the whole document into HTML or a LaTeX based PDF?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Table API Generator</title>
      <link>https://ogobrecht.com/posts/2016-06-10-table-api-generator/</link>
      <pubDate>Fri, 10 Jun 2016 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2016-06-10-table-api-generator/</guid>
      <description>&lt;p&gt;Last year I needed for a project a simple table API, which is able to generate a generic change log - something like &amp;ldquo;show me for table xyz which column was changed when and what was the old value and what is the new one&amp;rdquo;. Only changed values should be stored and all tables should log into the same generic logging table. Sounds like we need a generator for this.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown for Oracle APEX</title>
      <link>https://ogobrecht.com/posts/2016-01-01-markdown-for-oracle-apex/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2016-01-01-markdown-for-oracle-apex/</guid>
      <description>&lt;p&gt;Some years ago I implemented a task board in APEX. For commenting I used the &lt;a href=&#34;https://stackexchange.github.io&#34;&gt;stackexchange&lt;/a&gt; &lt;a href=&#34;https://github.com/balpha/pagedown&#34;&gt;markdown implementation&lt;/a&gt; (&lt;a href=&#34;https://code.google.com/archive/p/pagedown/&#34;&gt;old Google code repo&lt;/a&gt;), which is a pure JavaScript converter and editor and based on &lt;a href=&#34;https://github.com/showdownjs/showdown&#34;&gt;showdown.js&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Some months ago I had to implement an application, which should be able to have multiple editors on one page and the editors should be able to support a read only mode. Furthermore there were hard limits for the amount of text for each editor. Both things which are not so easy to implement with the rich text editor in APEX - no really read only mode and the amount of text is also a problem because of the HTML overhead.&lt;/p&gt;</description>
    </item>
    <item>
      <title>D3.js Force-Directed Network Chart</title>
      <link>https://ogobrecht.com/posts/2015-02-20-d3js-force-directed-network-chart/</link>
      <pubDate>Fri, 20 Feb 2015 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2015-02-20-d3js-force-directed-network-chart/</guid>
      <description>&lt;p&gt;&lt;em&gt;My first Oracle APEX plugin and open source project :-)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;div id=&#34;example&#34;&gt;&lt;/div&gt;&lt;!--the graph container--&gt;&#xA;&lt;p&gt;Everything started some months ago when I stumbled over this fascinating &lt;a href=&#34;https://bl.ocks.org/mbostock/4062045&#34;&gt;force-directed graph&lt;/a&gt;. I immediately had the idea to use this technology to visualize data models in APEX. My experience is, that direct after I documented a data model, this documentation is out of date. I wanted to have a live visualization of the data models. After the first implementation it turned out, that the resulting graph is also useful for other purposes and I decided to build up an APEX plugin for easier integration.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
