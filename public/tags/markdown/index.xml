<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Markdown on Ottmar’s Notes</title>
    <link>https://ogobrecht.com/tags/markdown/</link>
    <description>Recent content in Markdown on Ottmar’s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 10 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://ogobrecht.com/tags/markdown/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PLOC - Convert PL/SQL Code into Markdown Docs</title>
      <link>https://ogobrecht.com/posts/2019-01-10-ploc-plsql-code-to-doc-converter/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.com/posts/2019-01-10-ploc-plsql-code-to-doc-converter/</guid>
      <description>Some months ago I had to write a README file with Markdown syntax for a PL/SQL open source project. I changed function and procedure parameters of the package often during the implementation. Therefore, maintaining the documentation was no fun in the beginning. Maybe you know this from your own (payed) projects ;-)
Normally in the business world I see minimalistic comments in the code and a dedicated documentation independent of the code.</description>
    </item>
    
    <item>
      <title>Markdown for Oracle APEX</title>
      <link>https://ogobrecht.com/posts/2016-01-01-markdown-for-oracle-apex/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.com/posts/2016-01-01-markdown-for-oracle-apex/</guid>
      <description>Some years ago I implemented a task board in APEX. For commenting I used the stackexchange markdown implementation (old Google code repo), which is a pure JavaScript converter and editor and based on showdown.js.
Some months ago I had to implement an application, which should be able to have multiple editors on one page and the editors should be able to support a read only mode. Furthermore there were hard limits for the amount of text for each editor.</description>
    </item>
    
  </channel>
</rss>
