<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debug on Ottmar’s Notes</title>
    <link>https://ogobrecht.com/tags/debug/</link>
    <description>Recent content in Debug on Ottmar’s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 04 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ogobrecht.com/tags/debug/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Yet another Oracle DB logging tool: Console</title>
      <link>https://ogobrecht.com/posts/2021-10-04-yet-another-oracle-db-logging-tool-console/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ogobrecht.com/posts/2021-10-04-yet-another-oracle-db-logging-tool-console/</guid>
      <description>Photo by Pete Nuij on unsplash.com Table of Contents Introduction A single install script Production safe without further configuration Method names based on JavaScript Console Reduced amount of log entries through saved call stack Simple logging of method parameters Markdown format for automatically determined metadata Extensible logs through overloaded log methods Measure time and count things Assert, format and other helpers Displaying the package status of Console in a session APEX Error Handling Function APEX Plug-In for capturing frontend errors Sources of inspiration Project homepage  Introduction It looks like it is a hobby of PL/SQL developers to develop their own logging tool.</description>
    </item>
    
  </channel>
</rss>
