<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node.js on Ottmar’s Notes</title>
    <link>https://ogobrecht.com/tags/node.js/</link>
    <description>Recent content in Node.js on Ottmar’s Notes</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</managingEditor>
    <webMaster>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</webMaster>
    <lastBuildDate>Wed, 13 Oct 2021 12:00:00 +0000</lastBuildDate>
    <atom:link href="https://ogobrecht.com/tags/node.js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generate APEX plug-ins on the command line</title>
      <link>https://ogobrecht.com/posts/2021-10-13-generate-apex-plug-ins-on-the-command-line/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2021-10-13-generate-apex-plug-ins-on-the-command-line/</guid>
      <description>&lt;h2&gt;Table of Contents&lt;/h2&gt;&#xA;&lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ul&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#creating-a-template-from-the-existing-plug-in&#34;&gt;Creating a template from the existing plug-in&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#javascript-helper-functions-for-conversion&#34;&gt;JavaScript helper functions for conversion&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#build-script-to-build-the-plug-in-when-changes-are-made-in-the-source-code&#34;&gt;Build script to build the plug-in when changes are made in the source code.&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#npm-scripts-for-orchestration&#34;&gt;NPM scripts for orchestration&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#a-complete-example&#34;&gt;A complete example&lt;/a&gt;&lt;/li&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#another-way&#34;&gt;Another way&lt;/a&gt;&lt;/li&gt;&#xA;  &lt;/ul&gt;&#xA;&lt;/nav&gt;&#xA;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Everyone who develops plug-ins for APEX knows the problem: Once a plug-in is finished, future maintenance is usually just a matter of uploading updated JavaScript files to the plug-in and finally downloading the plug-in to make it available to others. This can be a very time consuming process when troubleshooting or implementing a new feature.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown Reporter</title>
      <link>https://ogobrecht.com/posts/2017-01-23-markdown-reporter/</link>
      <pubDate>Mon, 23 Jan 2017 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>https://ogobrecht.com/posts/2017-01-23-markdown-reporter/</guid>
      <description>&lt;p&gt;On the APEX connect 2016 in Berlin I talked about my APEX Markdown plugin and fine art printing with the help of Pandoc and LaTeX. When I was preparing my slides and documenting a SQL query in a Markdown code block I asked myself:&lt;/p&gt;&#xA;&lt;p&gt;What, if the database is taking this Markdown code block and runs the query inside to convert it into data?&lt;/p&gt;&#xA;&lt;p&gt;And what, if I take this Markdown text with the data in the code blocks and post it to a small webservice which converts the data blocks into charts and the whole document into HTML or a LaTeX based PDF?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
