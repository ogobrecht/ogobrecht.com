<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node.js on Ottmar’s Notes</title>
    <link>http://localhost:8888/tags/node.js/</link>
    <description>Recent content in Node.js on Ottmar’s Notes</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</managingEditor>
    <webMaster>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</webMaster>
    <lastBuildDate>Wed, 13 Oct 2021 12:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:8888/tags/node.js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generate APEX plug-ins on the command line</title>
      <link>http://localhost:8888/posts/2021-10-13-generate-apex-plug-ins-on-the-command-line/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>http://localhost:8888/posts/2021-10-13-generate-apex-plug-ins-on-the-command-line/</guid>
      <description>Table of Contents Introduction Creating a template from the existing plug-in JavaScript helper functions for conversion Build script to build the plug-in when changes are made in the source code. NPM scripts for orchestration A complete example Another way Introduction Everyone who develops plug-ins for APEX knows the problem: Once a plug-in is finished, future maintenance is usually just a matter of uploading updated JavaScript files to the plug-in and finally downloading the plug-in to make it available to others.</description>
    </item>
    <item>
      <title>Markdown Reporter</title>
      <link>http://localhost:8888/posts/2017-01-23-markdown-reporter/</link>
      <pubDate>Mon, 23 Jan 2017 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>http://localhost:8888/posts/2017-01-23-markdown-reporter/</guid>
      <description>On the APEX connect 2016 in Berlin I talked about my APEX Markdown plugin and fine art printing with the help of Pandoc and LaTeX. When I was preparing my slides and documenting a SQL query in a Markdown code block I asked myself:&#xA;What, if the database is taking this Markdown code block and runs the query inside to convert it into data?&#xA;And what, if I take this Markdown text with the data in the code blocks and post it to a small webservice which converts the data blocks into charts and the whole document into HTML or a LaTeX based PDF?</description>
    </item>
  </channel>
</rss>
