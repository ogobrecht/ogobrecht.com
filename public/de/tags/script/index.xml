<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Script on Ottmar’s Notizen</title>
    <link>http://localhost:8888/de/tags/script/</link>
    <description>Recent content in Script on Ottmar’s Notizen</description>
    <generator>Hugo</generator>
    <language>de</language>
    <managingEditor>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</managingEditor>
    <webMaster>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</webMaster>
    <lastBuildDate>Wed, 13 Oct 2021 12:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:8888/de/tags/script/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>APEX-Plug-ins auf der Kommandozeile generieren</title>
      <link>http://localhost:8888/de/posts/2021-10-13-apex-plugins-auf-der-kommandozeile-generieren/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>http://localhost:8888/de/posts/2021-10-13-apex-plugins-auf-der-kommandozeile-generieren/</guid>
      <description>Inhaltsverzeichnis Einleitung Erstellen eines Templates aus dem vorhandenen Plug-in JavaScript-Hilfsfunktionen für die Konvertierung Build-Skript zum Bauen des Plug-ins bei Änderungen im Quellcode NPM Skripte zur Orchestrierung Ein komplettes Beispiel Ein anderer Weg Einleitung Alle, die Plug-ins für APEX entwickeln, kennen das Problem: Ist ein Plug-in erst einmal fertig, dann geht es bei der zukünftigen Pflege meistens nur darum, aktualisierte JavaScript-Dateien in das Plugin hochzuladen und zum Schluss das Plug-in herunterzuladen, um es für andere zur Verfügung zu stellen.</description>
    </item>
    <item>
      <title>Erstellung schneller Insert-Skripte</title>
      <link>http://localhost:8888/de/posts/2021-01-31-create-fast-insert-scripts/</link>
      <pubDate>Sun, 31 Jan 2021 00:00:00 +0000</pubDate><author>ottmar.gobrecht@gmail.com (Ottmar Gobrecht)</author>
      <guid>http://localhost:8888/de/posts/2021-01-31-create-fast-insert-scripts/</guid>
      <description>Vor einigen Wochen habe ich eine neue Version meines PLEX-Projekts veröffentlicht. Ich habe die Möglichkeit verbessert, Tabellendaten als Insert-Skripte zu exportieren. Bisher war PLEX nur in der Lage, CSV-Daten zu exportieren. Der Grund dafür war, dass ich PLEX ursprünglich entwickelt habe, um die Einführung einer Versionskontrolle in Oracle-DB-Projekten zu beschleunigen, und die Möglichkeit CSV-Daten zu exportieren war dazu gedacht, Änderungen in Stammdatentabellen zu verfolgen.&#xA;Es stellte sich heraus, dass ein Kollege von mir wollte, dass PLEX für das initiale Deployment einer neuen Anwendung Insert-Skripte für alle Daten in allen Tabellen exportiert.</description>
    </item>
  </channel>
</rss>
